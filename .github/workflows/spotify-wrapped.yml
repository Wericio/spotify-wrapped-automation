name: Spotify Wrapped Automation

on:
  workflow_dispatch:  # Permite ejecutarlo manualmente
  schedule:
    - cron: '0 * * * *'  # Ejecuta cada hora (aj√∫stalo si es necesario)

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Google Credentials file
        run: |
          echo "‚úÖ Iniciando la creaci√≥n del archivo de credenciales..."
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" > credentials_base64.txt
          echo "üìÑ Archivo base64 creado, mostrando contenido:"
          cat credentials_base64.txt  # Verificar el contenido en los logs
          base64 --decode credentials_base64.txt > spotify-wrapped-personal-476133760b00.json
          echo "üìÇ Archivo JSON decodificado, mostrando contenido:"
          cat spotify-wrapped-personal-476133760b00.json  # Verificar que se cre√≥ correctamente

      - name: Check if JSON file exists
        run: |
          echo "üîç Verificando si el archivo JSON de credenciales existe..."
          ls -l spotify-wrapped-personal-476133760b00.json

      - name: Run save_to_sheets.py
        run: python save_to_sheets.py
        env:
          SPOTIPY_CLIENT_ID: ${{ secrets.SPOTIPY_CLIENT_ID }}
          SPOTIPY_CLIENT_SECRET: ${{ secrets.SPOTIPY_CLIENT_SECRET }}
          SPOTIPY_REDIRECT_URI: ${{ secrets.SPOTIPY_REDIRECT_URI }}

      - name: Run generate_top_songs.py
        run: |
          echo "üéµ Ejecutando generate_top_songs.py para actualizar la hoja Top Songs..."
          python generate_top_songs.py
